import random

"""
Load users' information.
"""
def load_users(users_file_path = None):
    users = []
    users_tel_num = []
    users_id = []
    lyft_token = []
    line_index = 0

    # Read users' info and token
    with open(users_file_path, "r") as users_file:
        while True:
            line = users_file.readline().strip("\n")
            if not line:
                break
            if line_index % 3 == 0:
                users_tel_num.append(line)
            elif line_index % 3 == 1:
                users_id.append(line)
            elif line_index % 3 == 2:
                lyft_token.append(line)
            line_index = line_index + 1

    # Add info to users
    for i in range(len(users_tel_num)):
        users.append((users_tel_num[i], users_id[i], lyft_token[i]))

    return users

"""
Generate user grid.
"""
def generate_user_grid(users = None, area = None, tunnel = [],
                       sta_lat = 0, end_lat = 0, num_lat = 0,
                       sta_lng = 0, end_lng = 0, num_lng = 0):

    # Insert location in grid and matching users
    grid = []
    port_num = len(tunnel)
    lng_list = [-70.959863533333333, -70.959863533333333, -70.959863533333333, -70.982036066666666, -70.982036066666666, -70.982036066666666, -70.982036066666666, -70.982036066666666, -71.004208599999998, -71.004208599999998, -71.004208599999998, -71.004208599999998, -71.004208599999998, -71.004208599999998, -71.004208599999998, -71.004208599999998, -71.026381133333331, -71.026381133333331, -71.026381133333331, -71.026381133333331, -71.026381133333331, -71.026381133333331, -71.026381133333331, -71.026381133333331, -71.026381133333331, -71.026381133333331, -71.048553666666663, -71.048553666666663, -71.048553666666663, -71.048553666666663, -71.048553666666663, -71.048553666666663, -71.048553666666663, -71.048553666666663, -71.048553666666663, -71.070726199999996, -71.070726199999996, -71.070726199999996, -71.070726199999996, -71.070726199999996, -71.070726199999996, -71.070726199999996, -71.070726199999996, -71.070726199999996, -71.070726199999996, -71.070726199999996, -71.092898733333328, -71.092898733333328, -71.092898733333328, -71.092898733333328, -71.092898733333328, -71.092898733333328, -71.092898733333328, -71.092898733333328, -71.092898733333328, -71.092898733333328, -71.115071266666675, -71.115071266666675, -71.115071266666675, -71.115071266666675, -71.115071266666675, -71.115071266666675, -71.115071266666675, -71.115071266666675, -71.115071266666675, -71.115071266666675, -71.137243800000007, -71.137243800000007, -71.137243800000007, -71.137243800000007, -71.137243800000007, -71.137243800000007, -71.137243800000007, -71.137243800000007, -71.137243800000007, -71.137243800000007, -71.137243800000007, -71.15941633333334, -71.15941633333334, -71.15941633333334, -71.15941633333334, -71.15941633333334, -71.15941633333334, -71.15941633333334, -71.15941633333334, -71.181588866666672, -71.181588866666672, -71.181588866666672, -71.181588866666672, -71.181588866666672, -71.181588866666672, -71.181588866666672, -71.203761400000005, -71.203761400000005, -71.203761400000005, -71.203761400000005, -71.203761400000005, -71.203761400000005, -71.225933933333337, -71.225933933333337, -71.225933933333337, -71.24810646666667, -71.24810646666667, -71.24810646666667, -71.270279000000002, -71.270279000000002, -71.417473333333334, -71.417473333333334, -71.457259666666658, -71.457259666666658, -71.048297000000005, -71.048297000000005, -71.048297000000005, -71.048297000000005, -71.056694500000006, -71.056694500000006, -71.056694500000006, -71.056694500000006, -71.056694500000006, -71.056694500000006, -71.065092000000007, -71.065092000000007, -71.065092000000007, -71.065092000000007, -71.065092000000007, -71.065092000000007, -71.065092000000007, -71.073489500000008, -71.073489500000008, -71.073489500000008, -71.073489500000008, -71.073489500000008, -71.073489500000008, -71.081886999999995, -71.081886999999995, -71.081886999999995, -71.081886999999995, -71.081886999999995, -71.081886999999995, -71.090284499999996, -71.090284499999996, -71.090284499999996, -71.090284499999996, -71.090284499999996, -71.090284499999996, -71.090284499999996, -71.098681999999997, -71.098681999999997, -71.098681999999997, -71.098681999999997, -71.098681999999997, -71.098681999999997, -71.098681999999997, -71.107079499999998, -71.107079499999998, -71.107079499999998, -71.107079499999998, -71.107079499999998, -71.107079499999998, -71.107079499999998, -71.115476999999998, -71.115476999999998, -71.115476999999998, -71.115476999999998, -71.115476999999998, -71.115476999999998, -71.115476999999998]
    lat_list = [42.260274066666661, 42.27517233333333, 42.349663666666665, 42.245375799999998, 42.260274066666661, 42.27517233333333, 42.2900706, 42.304968866666663, 42.245375799999998, 42.260274066666661, 42.27517233333333, 42.2900706, 42.304968866666663, 42.319867133333332, 42.364561933333334, 42.394358466666667, 42.230477533333328, 42.245375799999998, 42.260274066666661, 42.27517233333333, 42.2900706, 42.304968866666663, 42.334765399999995, 42.364561933333334, 42.379460199999997, 42.394358466666667, 42.215579266666666, 42.230477533333328, 42.245375799999998, 42.260274066666661, 42.27517233333333, 42.2900706, 42.319867133333332, 42.394358466666667, 42.409256733333329, 42.215579266666666, 42.230477533333328, 42.245375799999998, 42.260274066666661, 42.27517233333333, 42.2900706, 42.304968866666663, 42.319867133333332, 42.379460199999997, 42.394358466666667, 42.409256733333329, 42.215579266666666, 42.230477533333328, 42.245375799999998, 42.260274066666661, 42.27517233333333, 42.2900706, 42.304968866666663, 42.319867133333332, 42.379460199999997, 42.394358466666667, 42.215579266666666, 42.230477533333328, 42.245375799999998, 42.260274066666661, 42.27517233333333, 42.2900706, 42.304968866666663, 42.319867133333332, 42.379460199999997, 42.394358466666667, 42.245375799999998, 42.260274066666661, 42.27517233333333, 42.2900706, 42.304968866666663, 42.319867133333332, 42.334765399999995, 42.349663666666665, 42.364561933333334, 42.379460199999997, 42.394358466666667, 42.260274066666661, 42.27517233333333, 42.2900706, 42.304968866666663, 42.319867133333332, 42.334765399999995, 42.349663666666665, 42.364561933333334, 42.2900706, 42.304968866666663, 42.319867133333332, 42.334765399999995, 42.349663666666665, 42.364561933333334, 42.379460199999997, 42.2900706, 42.304968866666663, 42.319867133333332, 42.334765399999995, 42.349663666666665, 42.364561933333334, 42.319867133333332, 42.334765399999995, 42.349663666666665, 42.319867133333332, 42.334765399999995, 42.349663666666665, 42.304968866666663, 42.319867133333332, 42.289230666666668, 42.321180333333331, 42.289230666666668, 42.321180333333331, 42.331717000000005, 42.338043000000006, 42.344369, 42.350695000000002, 42.331717000000005, 42.338043000000006, 42.344369, 42.350695000000002, 42.357021000000003, 42.363346999999997, 42.331717000000005, 42.338043000000006, 42.344369, 42.350695000000002, 42.357021000000003, 42.363346999999997, 42.369672999999999, 42.331717000000005, 42.338043000000006, 42.344369, 42.350695000000002, 42.357021000000003, 42.369672999999999, 42.331717000000005, 42.338043000000006, 42.344369, 42.350695000000002, 42.363346999999997, 42.369672999999999, 42.331717000000005, 42.338043000000006, 42.344369, 42.350695000000002, 42.357021000000003, 42.363346999999997, 42.369672999999999, 42.331717000000005, 42.338043000000006, 42.344369, 42.350695000000002, 42.357021000000003, 42.363346999999997, 42.369672999999999, 42.331717000000005, 42.338043000000006, 42.344369, 42.350695000000002, 42.357021000000003, 42.363346999999997, 42.369672999999999, 42.331717000000005, 42.338043000000006, 42.344369, 42.350695000000002, 42.357021000000003, 42.363346999999997, 42.369672999999999]

    for loc_index in range(len(lng_list)): # each point
        this_lat = lat_list[loc_index]
        this_lng = lng_list[loc_index]
        grid.append((users[0][0], # Telephone number
                     users[0][1], # User ID
                     users[0][2], # Lyft Token
                     str(this_lat), # Latitude
                     str(this_lng), # Longitude
                     tunnel[(loc_index) % port_num][0], # Port number
                     tunnel[(loc_index) % port_num][1], # Assigned IP
                     area + "-" + "{:0>2d}".format(loc_index / 100) + "-" + "{:0>2d}".format(loc_index % 100), # Index
                     ))
        users.remove(users[0])
    return grid, users

"""
Update a user's information.
"""
def update_user(user = None, users = None):
    old_user = user
    old_users = users[:]

    # Update tel number, id and token to new one
    try:
        another = users[random.randint(0, len(users)-1)]
        new_user = (another[0], another[1], another[2],
                    user[3], user[4], user[5], user[6], user[7])
        users.remove(another)
        users.append((user[0], user[1], user[2]))
    except ValueError:
        return old_user, old_users
    
    return new_user, users
